# Generated by Django 2.2.8 on 2020-04-15 12:55

import awx.main.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('main', '0124_auto_20200409_0901'),
    ]

    operations = [
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=None, editable=False)),
                ('modified', models.DateTimeField(default=None, editable=False)),
                ('description', models.TextField(blank=True, default='')),
                ('name', models.CharField(max_length=512, unique=True)),
                ('extra_vars', models.TextField(blank=True)),
                ('admin_role', awx.main.fields.ImplicitRoleField(editable=False, null='True', on_delete=django.db.models.deletion.CASCADE, parent_role='singleton:system_administrator', related_name='+', to='main.Role')),
                ('created_by', models.ForeignKey(default=None, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name="{'class': 'action', 'model_name': 'action', 'app_label': 'main'}(class)s_created+", to=settings.AUTH_USER_MODEL)),
                ('job_template', models.ManyToManyField(blank=True, to='main.JobTemplate')),
                ('member_role', awx.main.fields.ImplicitRoleField(editable=False, null='True', on_delete=django.db.models.deletion.CASCADE, parent_role=['admin_role'], related_name='+', to='main.Role')),
                ('modified_by', models.ForeignKey(default=None, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name="{'class': 'action', 'model_name': 'action', 'app_label': 'main'}(class)s_modified+", to=settings.AUTH_USER_MODEL)),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'ordering': ('pk',),
            },
        ),
        migrations.AddField(
            model_name='activitystream',
            name='action',
            field=models.ManyToManyField(blank=True, to='main.Action'),
        ),
    ]
